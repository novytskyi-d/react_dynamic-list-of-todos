{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","components/helpers/debounce.ts","index.tsx"],"names":["TodoList","memo","todos","selectedTodo","onSelectTodo","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","filter","query","onFilterChange","onQueryChange","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onCloseModal","userId","useState","user","setUser","useEffect","getUser","cn","href","name","App","setTodos","setQuery","selectedTodoId","setSelectedTodoId","debouncedQuery","setDebouncedQuery","setFilter","useMemo","find","closeModal","useCallback","debounceQuery","func","timerId","clearTimeout","args","debounce","handleInputChange","visibleTodos","normalizedTitle","toLowerCase","normalizedQuery","trim","isQueryMatchTitle","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ddc13ec1.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | undefined;\n  onSelectTodo: (id: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = memo((\n  {\n    todos,\n    selectedTodo,\n    onSelectTodo,\n  },\n) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames(\n                {\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                },\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelectTodo(todo.id)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    {\n                      'far fa-eye-slash': todo.id === selectedTodo?.id,\n                      'far fa-eye': todo.id !== selectedTodo?.id,\n                    },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","import React, { memo } from 'react';\n\ntype Props = {\n  filter: string;\n  query: string;\n  onFilterChange: (filter: string) => void;\n  onQueryChange: (query: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = memo((\n  {\n    filter,\n    query,\n    onFilterChange,\n    onQueryChange,\n  },\n) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filter}\n          onChange={(event) => onFilterChange(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => onQueryChange(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query\n          && (\n            /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onQueryChange('')}\n            />\n          )}\n      </span>\n    </p>\n  </form>\n));\n","import React, { memo } from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = memo(() => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n));\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { memo, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedTodo: Todo;\n  onCloseModal: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = memo(\n  ({ selectedTodo, onCloseModal }) => {\n    const {\n      completed,\n      id,\n      title,\n      userId,\n    } = selectedTodo;\n    const [user, setUser] = useState<User | null>(null);\n\n    useEffect(() => {\n      getUser(userId)\n        .then(setUser);\n    });\n\n    return (\n      <div className=\"modal is-active\" data-cy=\"modal\">\n        <div className=\"modal-background\" />\n\n        {!user\n          ? (\n            <Loader />\n          )\n          : (\n            <div className=\"modal-card\">\n              <header className=\"modal-card-head\">\n                <div\n                  className=\"modal-card-title has-text-weight-medium\"\n                  data-cy=\"modal-header\"\n                >\n                  {`Todo #${id}`}\n                </div>\n\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  type=\"button\"\n                  className=\"delete\"\n                  data-cy=\"modal-close\"\n                  onClick={onCloseModal}\n                />\n              </header>\n\n              <div className=\"modal-card-body\">\n                <p className=\"block\" data-cy=\"modal-title\">\n                  {title}\n                </p>\n\n                <p className=\"block\" data-cy=\"modal-user\">\n                  <strong className={cn(\n                    {\n                      'has-text-success': completed,\n                      'has-text-danger': !completed,\n                    },\n                  )}\n                  >\n                    {completed ? 'Done' : 'Planned'}\n                  </strong>\n\n                  {' by '}\n\n                  <a href={`mailto:${user?.name}`}>\n                    {user?.name}\n                  </a>\n                </p>\n              </div>\n            </div>\n          )}\n      </div>\n    );\n  },\n);\n","/* eslint-disable max-len */\nimport React, {\n  useState,\n  useEffect,\n  useMemo,\n  useCallback,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { debounce } from './components/helpers/debounce';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [debouncedQuery, setDebouncedQuery] = useState('');\n  const [filter, setFilter] = useState('All');\n\n  const selectedTodo = useMemo(() => (\n    todos.find(todo => todo.id === selectedTodoId)\n  ), [selectedTodoId]);\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos);\n  }, []);\n\n  const closeModal = useCallback(() => (\n    setSelectedTodoId(0)\n  ), []);\n\n  const debounceQuery = useCallback((\n    debounce(setDebouncedQuery, 1000)\n  ), []);\n\n  const handleInputChange = useCallback((value: string) => {\n    setQuery(value);\n    debounceQuery(value);\n  }, []);\n\n  const visibleTodos = useMemo(() => {\n    if (debouncedQuery || filter !== 'all') {\n      return todos.filter(todo => {\n        const normalizedTitle = todo.title.toLowerCase();\n        const normalizedQuery = debouncedQuery.toLowerCase().trim();\n        const isQueryMatchTitle = normalizedTitle.includes(normalizedQuery);\n\n        switch (filter) {\n          case 'completed':\n            return todo.completed && isQueryMatchTitle;\n\n          case 'active':\n            return !todo.completed && isQueryMatchTitle;\n\n          default:\n            return todo && isQueryMatchTitle;\n        }\n      });\n    }\n\n    return todos;\n  }, [todos, filter, debouncedQuery]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filter={filter}\n                query={query}\n                onFilterChange={setFilter}\n                onQueryChange={handleInputChange}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodo={selectedTodo}\n                    onSelectTodo={setSelectedTodoId}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo\n        && (\n          <TodoModal\n            selectedTodo={selectedTodo}\n            onCloseModal={closeModal}\n          />\n        )}\n    </>\n  );\n};\n","export const debounce = (\n  func: React.Dispatch<React.SetStateAction<string>>,\n  delay: number,\n) => {\n  let timerId = 0;\n\n  return (...args: unknown[]) => {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n\n    timerId = setTimeout(func, delay, ...args);\n  };\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}